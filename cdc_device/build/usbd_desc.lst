ARM GAS  /tmp/cchJJa9o.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usbd_desc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.USBD_CDC_DeviceDescriptor,"ax",%progbits
  18              		.align	1
  19              		.global	USBD_CDC_DeviceDescriptor
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	USBD_CDC_DeviceDescriptor:
  27              	.LVL0:
  28              	.LFB944:
  29              		.file 1 "Src/usbd_desc.c"
   1:Src/usbd_desc.c **** /* USER CODE BEGIN Header */
   2:Src/usbd_desc.c **** /**
   3:Src/usbd_desc.c ****   ******************************************************************************
   4:Src/usbd_desc.c ****   * @file           : usbd_desc.c
   5:Src/usbd_desc.c ****   * @version        : v3.0_Cube
   6:Src/usbd_desc.c ****   * @brief          : This file implements the USB device descriptors.
   7:Src/usbd_desc.c ****   ******************************************************************************
   8:Src/usbd_desc.c ****   * @attention
   9:Src/usbd_desc.c ****   *
  10:Src/usbd_desc.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  11:Src/usbd_desc.c ****   * All rights reserved.</center></h2>
  12:Src/usbd_desc.c ****   *
  13:Src/usbd_desc.c ****   * This software component is licensed by ST under Ultimate Liberty license
  14:Src/usbd_desc.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  15:Src/usbd_desc.c ****   * the License. You may obtain a copy of the License at:
  16:Src/usbd_desc.c ****   *                             www.st.com/SLA0044
  17:Src/usbd_desc.c ****   *
  18:Src/usbd_desc.c ****   ******************************************************************************
  19:Src/usbd_desc.c ****   */
  20:Src/usbd_desc.c **** /* USER CODE END Header */
  21:Src/usbd_desc.c **** 
  22:Src/usbd_desc.c **** /* Includes ------------------------------------------------------------------*/
  23:Src/usbd_desc.c **** #include "usbd_core.h"
  24:Src/usbd_desc.c **** #include "usbd_desc.h"
  25:Src/usbd_desc.c **** #include "usbd_conf.h"
  26:Src/usbd_desc.c **** 
  27:Src/usbd_desc.c **** /* USER CODE BEGIN INCLUDE */
  28:Src/usbd_desc.c **** 
  29:Src/usbd_desc.c **** /* USER CODE END INCLUDE */
ARM GAS  /tmp/cchJJa9o.s 			page 2


  30:Src/usbd_desc.c **** 
  31:Src/usbd_desc.c **** /* Private typedef -----------------------------------------------------------*/
  32:Src/usbd_desc.c **** /* Private define ------------------------------------------------------------*/
  33:Src/usbd_desc.c **** /* Private macro -------------------------------------------------------------*/
  34:Src/usbd_desc.c **** 
  35:Src/usbd_desc.c **** /* USER CODE BEGIN PV */
  36:Src/usbd_desc.c **** /* Private variables ---------------------------------------------------------*/
  37:Src/usbd_desc.c **** 
  38:Src/usbd_desc.c **** /* USER CODE END PV */
  39:Src/usbd_desc.c **** 
  40:Src/usbd_desc.c **** /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
  41:Src/usbd_desc.c ****   * @{
  42:Src/usbd_desc.c ****   */
  43:Src/usbd_desc.c **** 
  44:Src/usbd_desc.c **** /** @addtogroup USBD_DESC
  45:Src/usbd_desc.c ****   * @{
  46:Src/usbd_desc.c ****   */
  47:Src/usbd_desc.c **** 
  48:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_TypesDefinitions USBD_DESC_Private_TypesDefinitions
  49:Src/usbd_desc.c ****   * @brief Private types.
  50:Src/usbd_desc.c ****   * @{
  51:Src/usbd_desc.c ****   */
  52:Src/usbd_desc.c **** 
  53:Src/usbd_desc.c **** /* USER CODE BEGIN PRIVATE_TYPES */
  54:Src/usbd_desc.c **** 
  55:Src/usbd_desc.c **** /* USER CODE END PRIVATE_TYPES */
  56:Src/usbd_desc.c **** 
  57:Src/usbd_desc.c **** /**
  58:Src/usbd_desc.c ****   * @}
  59:Src/usbd_desc.c ****   */
  60:Src/usbd_desc.c **** 
  61:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Defines USBD_DESC_Private_Defines
  62:Src/usbd_desc.c ****   * @brief Private defines.
  63:Src/usbd_desc.c ****   * @{
  64:Src/usbd_desc.c ****   */
  65:Src/usbd_desc.c **** 
  66:Src/usbd_desc.c **** #define USBD_VID     1155
  67:Src/usbd_desc.c **** #define USBD_LANGID_STRING     1033
  68:Src/usbd_desc.c **** #define USBD_MANUFACTURER_STRING     "STMicroelectronics"
  69:Src/usbd_desc.c **** #define USBD_PID     22336
  70:Src/usbd_desc.c **** #define USBD_PRODUCT_STRING     "My Virtual ComPort"
  71:Src/usbd_desc.c **** #define USBD_CONFIGURATION_STRING     "CDC Config"
  72:Src/usbd_desc.c **** #define USBD_INTERFACE_STRING     "CDC Interface"
  73:Src/usbd_desc.c **** 
  74:Src/usbd_desc.c **** /* USER CODE BEGIN PRIVATE_DEFINES */
  75:Src/usbd_desc.c **** 
  76:Src/usbd_desc.c **** /* USER CODE END PRIVATE_DEFINES */
  77:Src/usbd_desc.c **** 
  78:Src/usbd_desc.c **** /**
  79:Src/usbd_desc.c ****   * @}
  80:Src/usbd_desc.c ****   */
  81:Src/usbd_desc.c **** 
  82:Src/usbd_desc.c **** /* USER CODE BEGIN 0 */
  83:Src/usbd_desc.c **** 
  84:Src/usbd_desc.c **** /* USER CODE END 0 */
  85:Src/usbd_desc.c **** 
  86:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Macros USBD_DESC_Private_Macros
ARM GAS  /tmp/cchJJa9o.s 			page 3


  87:Src/usbd_desc.c ****   * @brief Private macros.
  88:Src/usbd_desc.c ****   * @{
  89:Src/usbd_desc.c ****   */
  90:Src/usbd_desc.c **** 
  91:Src/usbd_desc.c **** /* USER CODE BEGIN PRIVATE_MACRO */
  92:Src/usbd_desc.c **** 
  93:Src/usbd_desc.c **** /* USER CODE END PRIVATE_MACRO */
  94:Src/usbd_desc.c **** 
  95:Src/usbd_desc.c **** /**
  96:Src/usbd_desc.c ****   * @}
  97:Src/usbd_desc.c ****   */
  98:Src/usbd_desc.c ****   
  99:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_FunctionPrototypes USBD_DESC_Private_FunctionPrototypes
 100:Src/usbd_desc.c ****   * @brief Private functions declaration.
 101:Src/usbd_desc.c ****   * @{
 102:Src/usbd_desc.c ****   */
 103:Src/usbd_desc.c ****   
 104:Src/usbd_desc.c **** static void Get_SerialNum(void);
 105:Src/usbd_desc.c **** static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len);
 106:Src/usbd_desc.c ****   
 107:Src/usbd_desc.c **** /**
 108:Src/usbd_desc.c ****   * @}
 109:Src/usbd_desc.c ****   */  
 110:Src/usbd_desc.c ****   
 111:Src/usbd_desc.c **** 
 112:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_FunctionPrototypes USBD_DESC_Private_FunctionPrototypes
 113:Src/usbd_desc.c ****   * @brief Private functions declaration.
 114:Src/usbd_desc.c ****   * @{
 115:Src/usbd_desc.c ****   */
 116:Src/usbd_desc.c **** 
 117:Src/usbd_desc.c **** uint8_t * USBD_CDC_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 118:Src/usbd_desc.c **** uint8_t * USBD_CDC_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 119:Src/usbd_desc.c **** uint8_t * USBD_CDC_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 120:Src/usbd_desc.c **** uint8_t * USBD_CDC_ProductStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 121:Src/usbd_desc.c **** uint8_t * USBD_CDC_SerialStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 122:Src/usbd_desc.c **** uint8_t * USBD_CDC_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 123:Src/usbd_desc.c **** uint8_t * USBD_CDC_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length);
 124:Src/usbd_desc.c **** 
 125:Src/usbd_desc.c **** /**
 126:Src/usbd_desc.c ****   * @}
 127:Src/usbd_desc.c ****   */
 128:Src/usbd_desc.c **** 
 129:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Variables USBD_DESC_Private_Variables
 130:Src/usbd_desc.c ****   * @brief Private variables.
 131:Src/usbd_desc.c ****   * @{
 132:Src/usbd_desc.c ****   */
 133:Src/usbd_desc.c **** 
 134:Src/usbd_desc.c **** USBD_DescriptorsTypeDef CDC_Desc =
 135:Src/usbd_desc.c **** {
 136:Src/usbd_desc.c ****   USBD_CDC_DeviceDescriptor, 
 137:Src/usbd_desc.c ****   USBD_CDC_LangIDStrDescriptor, 
 138:Src/usbd_desc.c ****   USBD_CDC_ManufacturerStrDescriptor, 
 139:Src/usbd_desc.c ****   USBD_CDC_ProductStrDescriptor, 
 140:Src/usbd_desc.c ****   USBD_CDC_SerialStrDescriptor, 
 141:Src/usbd_desc.c ****   USBD_CDC_ConfigStrDescriptor, 
 142:Src/usbd_desc.c ****   USBD_CDC_InterfaceStrDescriptor
 143:Src/usbd_desc.c **** };
ARM GAS  /tmp/cchJJa9o.s 			page 4


 144:Src/usbd_desc.c **** 
 145:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 146:Src/usbd_desc.c ****   #pragma data_alignment=4
 147:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 148:Src/usbd_desc.c **** /** USB standard device descriptor. */
 149:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_CDC_DeviceDesc[USB_LEN_DEV_DESC] __ALIGN_END =
 150:Src/usbd_desc.c **** {
 151:Src/usbd_desc.c ****   0x12,                       /*bLength */
 152:Src/usbd_desc.c ****   USB_DESC_TYPE_DEVICE,       /*bDescriptorType*/
 153:Src/usbd_desc.c ****   0x00,                       /*bcdUSB */
 154:Src/usbd_desc.c ****   0x02,
 155:Src/usbd_desc.c ****   0x02,                       /*bDeviceClass*/
 156:Src/usbd_desc.c ****   0x02,                       /*bDeviceSubClass*/
 157:Src/usbd_desc.c ****   0x00,                       /*bDeviceProtocol*/
 158:Src/usbd_desc.c ****   USB_MAX_EP0_SIZE,           /*bMaxPacketSize*/
 159:Src/usbd_desc.c ****   LOBYTE(USBD_VID),           /*idVendor*/
 160:Src/usbd_desc.c ****   HIBYTE(USBD_VID),           /*idVendor*/
 161:Src/usbd_desc.c ****   LOBYTE(USBD_PID),           /*idProduct*/
 162:Src/usbd_desc.c ****   HIBYTE(USBD_PID),           /*idProduct*/
 163:Src/usbd_desc.c ****   0x00,                       /*bcdDevice rel. 2.00*/
 164:Src/usbd_desc.c ****   0x02,
 165:Src/usbd_desc.c ****   USBD_IDX_MFC_STR,           /*Index of manufacturer  string*/
 166:Src/usbd_desc.c ****   USBD_IDX_PRODUCT_STR,       /*Index of product string*/
 167:Src/usbd_desc.c ****   USBD_IDX_SERIAL_STR,        /*Index of serial number string*/
 168:Src/usbd_desc.c ****   USBD_MAX_NUM_CONFIGURATION  /*bNumConfigurations*/
 169:Src/usbd_desc.c **** };
 170:Src/usbd_desc.c **** 
 171:Src/usbd_desc.c **** /* USB_DeviceDescriptor */
 172:Src/usbd_desc.c **** 
 173:Src/usbd_desc.c **** /**
 174:Src/usbd_desc.c ****   * @}
 175:Src/usbd_desc.c ****   */
 176:Src/usbd_desc.c **** 
 177:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Variables USBD_DESC_Private_Variables
 178:Src/usbd_desc.c ****   * @brief Private variables.
 179:Src/usbd_desc.c ****   * @{
 180:Src/usbd_desc.c ****   */
 181:Src/usbd_desc.c **** 
 182:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 183:Src/usbd_desc.c ****   #pragma data_alignment=4
 184:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 185:Src/usbd_desc.c **** 
 186:Src/usbd_desc.c **** /** USB lang indentifier descriptor. */
 187:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_LangIDDesc[USB_LEN_LANGID_STR_DESC] __ALIGN_END =
 188:Src/usbd_desc.c **** {
 189:Src/usbd_desc.c ****      USB_LEN_LANGID_STR_DESC,
 190:Src/usbd_desc.c ****      USB_DESC_TYPE_STRING,
 191:Src/usbd_desc.c ****      LOBYTE(USBD_LANGID_STRING),
 192:Src/usbd_desc.c ****      HIBYTE(USBD_LANGID_STRING)
 193:Src/usbd_desc.c **** };
 194:Src/usbd_desc.c **** 
 195:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /* IAR Compiler */
 196:Src/usbd_desc.c ****   #pragma data_alignment=4
 197:Src/usbd_desc.c **** #endif /* defined ( __ICCARM__ ) */
 198:Src/usbd_desc.c **** /* Internal string descriptor. */
 199:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_StrDesc[USBD_MAX_STR_DESC_SIZ] __ALIGN_END;
 200:Src/usbd_desc.c **** 
ARM GAS  /tmp/cchJJa9o.s 			page 5


 201:Src/usbd_desc.c **** #if defined ( __ICCARM__ ) /*!< IAR Compiler */
 202:Src/usbd_desc.c ****   #pragma data_alignment=4   
 203:Src/usbd_desc.c **** #endif
 204:Src/usbd_desc.c **** __ALIGN_BEGIN uint8_t USBD_StringSerial[USB_SIZ_STRING_SERIAL] __ALIGN_END = {
 205:Src/usbd_desc.c ****   USB_SIZ_STRING_SERIAL,
 206:Src/usbd_desc.c ****   USB_DESC_TYPE_STRING,
 207:Src/usbd_desc.c **** };
 208:Src/usbd_desc.c **** 
 209:Src/usbd_desc.c **** /**
 210:Src/usbd_desc.c ****   * @}
 211:Src/usbd_desc.c ****   */
 212:Src/usbd_desc.c **** 
 213:Src/usbd_desc.c **** /** @defgroup USBD_DESC_Private_Functions USBD_DESC_Private_Functions
 214:Src/usbd_desc.c ****   * @brief Private functions.
 215:Src/usbd_desc.c ****   * @{
 216:Src/usbd_desc.c ****   */
 217:Src/usbd_desc.c **** 
 218:Src/usbd_desc.c **** /**
 219:Src/usbd_desc.c ****   * @brief  Return the device descriptor
 220:Src/usbd_desc.c ****   * @param  speed : Current device speed
 221:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 222:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 223:Src/usbd_desc.c ****   */
 224:Src/usbd_desc.c **** uint8_t * USBD_CDC_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 225:Src/usbd_desc.c **** {
  30              		.loc 1 225 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 226:Src/usbd_desc.c ****   UNUSED(speed);
  35              		.loc 1 226 3 view .LVU1
 227:Src/usbd_desc.c ****   *length = sizeof(USBD_CDC_DeviceDesc);
  36              		.loc 1 227 3 view .LVU2
  37              		.loc 1 227 11 is_stmt 0 view .LVU3
  38 0000 1223     		movs	r3, #18
  39 0002 0B80     		strh	r3, [r1]	@ movhi
 228:Src/usbd_desc.c ****   return USBD_CDC_DeviceDesc;
  40              		.loc 1 228 3 is_stmt 1 view .LVU4
 229:Src/usbd_desc.c **** }
  41              		.loc 1 229 1 is_stmt 0 view .LVU5
  42 0004 0048     		ldr	r0, .L2
  43              	.LVL1:
  44              		.loc 1 229 1 view .LVU6
  45 0006 7047     		bx	lr
  46              	.L3:
  47              		.align	2
  48              	.L2:
  49 0008 00000000 		.word	.LANCHOR0
  50              		.cfi_endproc
  51              	.LFE944:
  53              		.section	.text.USBD_CDC_LangIDStrDescriptor,"ax",%progbits
  54              		.align	1
  55              		.global	USBD_CDC_LangIDStrDescriptor
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
ARM GAS  /tmp/cchJJa9o.s 			page 6


  59              		.fpu fpv4-sp-d16
  61              	USBD_CDC_LangIDStrDescriptor:
  62              	.LVL2:
  63              	.LFB945:
 230:Src/usbd_desc.c **** 
 231:Src/usbd_desc.c **** /**
 232:Src/usbd_desc.c ****   * @brief  Return the LangID string descriptor
 233:Src/usbd_desc.c ****   * @param  speed : Current device speed
 234:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 235:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 236:Src/usbd_desc.c ****   */
 237:Src/usbd_desc.c **** uint8_t * USBD_CDC_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 238:Src/usbd_desc.c **** {
  64              		.loc 1 238 1 is_stmt 1 view -0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
 239:Src/usbd_desc.c ****   UNUSED(speed);
  69              		.loc 1 239 3 view .LVU8
 240:Src/usbd_desc.c ****   *length = sizeof(USBD_LangIDDesc);
  70              		.loc 1 240 3 view .LVU9
  71              		.loc 1 240 11 is_stmt 0 view .LVU10
  72 0000 0423     		movs	r3, #4
  73 0002 0B80     		strh	r3, [r1]	@ movhi
 241:Src/usbd_desc.c ****   return USBD_LangIDDesc;
  74              		.loc 1 241 3 is_stmt 1 view .LVU11
 242:Src/usbd_desc.c **** }
  75              		.loc 1 242 1 is_stmt 0 view .LVU12
  76 0004 0048     		ldr	r0, .L5
  77              	.LVL3:
  78              		.loc 1 242 1 view .LVU13
  79 0006 7047     		bx	lr
  80              	.L6:
  81              		.align	2
  82              	.L5:
  83 0008 00000000 		.word	.LANCHOR1
  84              		.cfi_endproc
  85              	.LFE945:
  87              		.section	.text.IntToUnicode,"ax",%progbits
  88              		.align	1
  89              		.syntax unified
  90              		.thumb
  91              		.thumb_func
  92              		.fpu fpv4-sp-d16
  94              	IntToUnicode:
  95              	.LVL4:
  96              	.LFB952:
 243:Src/usbd_desc.c **** 
 244:Src/usbd_desc.c **** /**
 245:Src/usbd_desc.c ****   * @brief  Return the product string descriptor
 246:Src/usbd_desc.c ****   * @param  speed : Current device speed
 247:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 248:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 249:Src/usbd_desc.c ****   */
 250:Src/usbd_desc.c **** uint8_t * USBD_CDC_ProductStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 251:Src/usbd_desc.c **** {
ARM GAS  /tmp/cchJJa9o.s 			page 7


 252:Src/usbd_desc.c ****   if(speed == 0)
 253:Src/usbd_desc.c ****   {
 254:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_PRODUCT_STRING, USBD_StrDesc, length);
 255:Src/usbd_desc.c ****   }
 256:Src/usbd_desc.c ****   else
 257:Src/usbd_desc.c ****   {
 258:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_PRODUCT_STRING, USBD_StrDesc, length);
 259:Src/usbd_desc.c ****   }
 260:Src/usbd_desc.c ****   return USBD_StrDesc;
 261:Src/usbd_desc.c **** }
 262:Src/usbd_desc.c **** 
 263:Src/usbd_desc.c **** /**
 264:Src/usbd_desc.c ****   * @brief  Return the manufacturer string descriptor
 265:Src/usbd_desc.c ****   * @param  speed : Current device speed
 266:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 267:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 268:Src/usbd_desc.c ****   */
 269:Src/usbd_desc.c **** uint8_t * USBD_CDC_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 270:Src/usbd_desc.c **** {
 271:Src/usbd_desc.c ****   UNUSED(speed);
 272:Src/usbd_desc.c ****   USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 273:Src/usbd_desc.c ****   return USBD_StrDesc;
 274:Src/usbd_desc.c **** }
 275:Src/usbd_desc.c **** 
 276:Src/usbd_desc.c **** /**
 277:Src/usbd_desc.c ****   * @brief  Return the serial number string descriptor
 278:Src/usbd_desc.c ****   * @param  speed : Current device speed
 279:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 280:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 281:Src/usbd_desc.c ****   */
 282:Src/usbd_desc.c **** uint8_t * USBD_CDC_SerialStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 283:Src/usbd_desc.c **** {
 284:Src/usbd_desc.c ****   UNUSED(speed);
 285:Src/usbd_desc.c ****   *length = USB_SIZ_STRING_SERIAL;
 286:Src/usbd_desc.c **** 
 287:Src/usbd_desc.c ****   /* Update the serial number string descriptor with the data from the unique
 288:Src/usbd_desc.c ****    * ID */
 289:Src/usbd_desc.c ****   Get_SerialNum();
 290:Src/usbd_desc.c ****   
 291:Src/usbd_desc.c ****   /* USER CODE BEGIN USBD_CDC_SerialStrDescriptor */
 292:Src/usbd_desc.c ****   
 293:Src/usbd_desc.c ****   /* USER CODE END USBD_CDC_SerialStrDescriptor */
 294:Src/usbd_desc.c **** 
 295:Src/usbd_desc.c ****   return (uint8_t *) USBD_StringSerial;
 296:Src/usbd_desc.c **** }
 297:Src/usbd_desc.c **** 
 298:Src/usbd_desc.c **** /**
 299:Src/usbd_desc.c ****   * @brief  Return the configuration string descriptor
 300:Src/usbd_desc.c ****   * @param  speed : Current device speed
 301:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 302:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 303:Src/usbd_desc.c ****   */
 304:Src/usbd_desc.c **** uint8_t * USBD_CDC_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 305:Src/usbd_desc.c **** {
 306:Src/usbd_desc.c ****   if(speed == USBD_SPEED_HIGH)
 307:Src/usbd_desc.c ****   {
 308:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING, USBD_StrDesc, length);
ARM GAS  /tmp/cchJJa9o.s 			page 8


 309:Src/usbd_desc.c ****   }
 310:Src/usbd_desc.c ****   else
 311:Src/usbd_desc.c ****   {
 312:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING, USBD_StrDesc, length);
 313:Src/usbd_desc.c ****   }
 314:Src/usbd_desc.c ****   return USBD_StrDesc;
 315:Src/usbd_desc.c **** }
 316:Src/usbd_desc.c **** 
 317:Src/usbd_desc.c **** /**
 318:Src/usbd_desc.c ****   * @brief  Return the interface string descriptor
 319:Src/usbd_desc.c ****   * @param  speed : Current device speed
 320:Src/usbd_desc.c ****   * @param  length : Pointer to data length variable
 321:Src/usbd_desc.c ****   * @retval Pointer to descriptor buffer
 322:Src/usbd_desc.c ****   */
 323:Src/usbd_desc.c **** uint8_t * USBD_CDC_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
 324:Src/usbd_desc.c **** {
 325:Src/usbd_desc.c ****   if(speed == 0)
 326:Src/usbd_desc.c ****   {
 327:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_INTERFACE_STRING, USBD_StrDesc, length);
 328:Src/usbd_desc.c ****   }
 329:Src/usbd_desc.c ****   else
 330:Src/usbd_desc.c ****   {
 331:Src/usbd_desc.c ****     USBD_GetString((uint8_t *)USBD_INTERFACE_STRING, USBD_StrDesc, length);
 332:Src/usbd_desc.c ****   }
 333:Src/usbd_desc.c ****   return USBD_StrDesc;
 334:Src/usbd_desc.c **** }
 335:Src/usbd_desc.c **** 
 336:Src/usbd_desc.c **** /**
 337:Src/usbd_desc.c ****   * @brief  Create the serial number string descriptor 
 338:Src/usbd_desc.c ****   * @param  None 
 339:Src/usbd_desc.c ****   * @retval None
 340:Src/usbd_desc.c ****   */
 341:Src/usbd_desc.c **** static void Get_SerialNum(void)
 342:Src/usbd_desc.c **** {
 343:Src/usbd_desc.c ****   uint32_t deviceserial0, deviceserial1, deviceserial2;
 344:Src/usbd_desc.c **** 
 345:Src/usbd_desc.c ****   deviceserial0 = *(uint32_t *) DEVICE_ID1;
 346:Src/usbd_desc.c ****   deviceserial1 = *(uint32_t *) DEVICE_ID2;
 347:Src/usbd_desc.c ****   deviceserial2 = *(uint32_t *) DEVICE_ID3;
 348:Src/usbd_desc.c **** 
 349:Src/usbd_desc.c ****   deviceserial0 += deviceserial2;
 350:Src/usbd_desc.c **** 
 351:Src/usbd_desc.c ****   if (deviceserial0 != 0)
 352:Src/usbd_desc.c ****   {
 353:Src/usbd_desc.c ****     IntToUnicode(deviceserial0, &USBD_StringSerial[2], 8);
 354:Src/usbd_desc.c ****     IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 355:Src/usbd_desc.c ****   }
 356:Src/usbd_desc.c **** }
 357:Src/usbd_desc.c **** 
 358:Src/usbd_desc.c **** /**
 359:Src/usbd_desc.c ****   * @brief  Convert Hex 32Bits value into char 
 360:Src/usbd_desc.c ****   * @param  value: value to convert
 361:Src/usbd_desc.c ****   * @param  pbuf: pointer to the buffer 
 362:Src/usbd_desc.c ****   * @param  len: buffer length
 363:Src/usbd_desc.c ****   * @retval None
 364:Src/usbd_desc.c ****   */
 365:Src/usbd_desc.c **** static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len)
ARM GAS  /tmp/cchJJa9o.s 			page 9


 366:Src/usbd_desc.c **** {
  97              		.loc 1 366 1 is_stmt 1 view -0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 367:Src/usbd_desc.c ****   uint8_t idx = 0;
 102              		.loc 1 367 3 view .LVU15
 368:Src/usbd_desc.c **** 
 369:Src/usbd_desc.c ****   for (idx = 0; idx < len; idx++)
 103              		.loc 1 369 3 view .LVU16
 104              		.loc 1 369 12 is_stmt 0 view .LVU17
 105 0000 0023     		movs	r3, #0
 106              	.LVL5:
 107              		.loc 1 369 17 is_stmt 1 view .LVU18
 108              		.loc 1 369 3 is_stmt 0 view .LVU19
 109 0002 9342     		cmp	r3, r2
 110 0004 17D2     		bcs	.L15
 366:Src/usbd_desc.c ****   uint8_t idx = 0;
 111              		.loc 1 366 1 view .LVU20
 112 0006 30B4     		push	{r4, r5}
 113              	.LCFI0:
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 4, -8
 116              		.cfi_offset 5, -4
 117 0008 0BE0     		b	.L11
 118              	.L9:
 370:Src/usbd_desc.c ****   {
 371:Src/usbd_desc.c ****     if (((value >> 28)) < 0xA)
 372:Src/usbd_desc.c ****     {
 373:Src/usbd_desc.c ****       pbuf[2 * idx] = (value >> 28) + '0';
 374:Src/usbd_desc.c ****     }
 375:Src/usbd_desc.c ****     else
 376:Src/usbd_desc.c ****     {
 377:Src/usbd_desc.c ****       pbuf[2 * idx] = (value >> 28) + 'A' - 10;
 119              		.loc 1 377 7 is_stmt 1 view .LVU21
 120              		.loc 1 377 43 is_stmt 0 view .LVU22
 121 000a 3734     		adds	r4, r4, #55
 122              		.loc 1 377 21 view .LVU23
 123 000c 01F81340 		strb	r4, [r1, r3, lsl #1]
 124              	.L10:
 378:Src/usbd_desc.c ****     }
 379:Src/usbd_desc.c **** 
 380:Src/usbd_desc.c ****     value = value << 4;
 125              		.loc 1 380 5 is_stmt 1 discriminator 2 view .LVU24
 126              		.loc 1 380 11 is_stmt 0 discriminator 2 view .LVU25
 127 0010 0001     		lsls	r0, r0, #4
 128              	.LVL6:
 381:Src/usbd_desc.c **** 
 382:Src/usbd_desc.c ****     pbuf[2 * idx + 1] = 0;
 129              		.loc 1 382 5 is_stmt 1 discriminator 2 view .LVU26
 130              		.loc 1 382 12 is_stmt 0 discriminator 2 view .LVU27
 131 0012 5C00     		lsls	r4, r3, #1
 132              		.loc 1 382 9 discriminator 2 view .LVU28
 133 0014 0134     		adds	r4, r4, #1
 134              		.loc 1 382 23 discriminator 2 view .LVU29
 135 0016 0025     		movs	r5, #0
ARM GAS  /tmp/cchJJa9o.s 			page 10


 136 0018 0D55     		strb	r5, [r1, r4]
 369:Src/usbd_desc.c ****   {
 137              		.loc 1 369 28 is_stmt 1 discriminator 2 view .LVU30
 369:Src/usbd_desc.c ****   {
 138              		.loc 1 369 31 is_stmt 0 discriminator 2 view .LVU31
 139 001a 0133     		adds	r3, r3, #1
 140              	.LVL7:
 369:Src/usbd_desc.c ****   {
 141              		.loc 1 369 31 discriminator 2 view .LVU32
 142 001c DBB2     		uxtb	r3, r3
 143              	.LVL8:
 369:Src/usbd_desc.c ****   {
 144              		.loc 1 369 17 is_stmt 1 discriminator 2 view .LVU33
 369:Src/usbd_desc.c ****   {
 145              		.loc 1 369 3 is_stmt 0 discriminator 2 view .LVU34
 146 001e 9342     		cmp	r3, r2
 147 0020 07D2     		bcs	.L16
 148              	.L11:
 371:Src/usbd_desc.c ****     {
 149              		.loc 1 371 5 is_stmt 1 view .LVU35
 371:Src/usbd_desc.c ****     {
 150              		.loc 1 371 17 is_stmt 0 view .LVU36
 151 0022 040F     		lsrs	r4, r0, #28
 371:Src/usbd_desc.c ****     {
 152              		.loc 1 371 8 view .LVU37
 153 0024 B0F1204F 		cmp	r0, #-1610612736
 154 0028 EFD2     		bcs	.L9
 373:Src/usbd_desc.c ****     }
 155              		.loc 1 373 7 is_stmt 1 view .LVU38
 373:Src/usbd_desc.c ****     }
 156              		.loc 1 373 37 is_stmt 0 view .LVU39
 157 002a 3034     		adds	r4, r4, #48
 373:Src/usbd_desc.c ****     }
 158              		.loc 1 373 21 view .LVU40
 159 002c 01F81340 		strb	r4, [r1, r3, lsl #1]
 160 0030 EEE7     		b	.L10
 161              	.L16:
 383:Src/usbd_desc.c ****   }
 384:Src/usbd_desc.c **** }
 162              		.loc 1 384 1 view .LVU41
 163 0032 30BC     		pop	{r4, r5}
 164              	.LCFI1:
 165              		.cfi_restore 5
 166              		.cfi_restore 4
 167              		.cfi_def_cfa_offset 0
 168 0034 7047     		bx	lr
 169              	.L15:
 170              		.loc 1 384 1 view .LVU42
 171 0036 7047     		bx	lr
 172              		.cfi_endproc
 173              	.LFE952:
 175              		.section	.text.Get_SerialNum,"ax",%progbits
 176              		.align	1
 177              		.syntax unified
 178              		.thumb
 179              		.thumb_func
 180              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cchJJa9o.s 			page 11


 182              	Get_SerialNum:
 183              	.LFB951:
 342:Src/usbd_desc.c ****   uint32_t deviceserial0, deviceserial1, deviceserial2;
 184              		.loc 1 342 1 is_stmt 1 view -0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188 0000 38B5     		push	{r3, r4, r5, lr}
 189              	.LCFI2:
 190              		.cfi_def_cfa_offset 16
 191              		.cfi_offset 3, -16
 192              		.cfi_offset 4, -12
 193              		.cfi_offset 5, -8
 194              		.cfi_offset 14, -4
 343:Src/usbd_desc.c **** 
 195              		.loc 1 343 3 view .LVU44
 345:Src/usbd_desc.c ****   deviceserial1 = *(uint32_t *) DEVICE_ID2;
 196              		.loc 1 345 3 view .LVU45
 345:Src/usbd_desc.c ****   deviceserial1 = *(uint32_t *) DEVICE_ID2;
 197              		.loc 1 345 17 is_stmt 0 view .LVU46
 198 0002 0A4B     		ldr	r3, .L21
 199 0004 1868     		ldr	r0, [r3]
 200              	.LVL9:
 346:Src/usbd_desc.c ****   deviceserial2 = *(uint32_t *) DEVICE_ID3;
 201              		.loc 1 346 3 is_stmt 1 view .LVU47
 346:Src/usbd_desc.c ****   deviceserial2 = *(uint32_t *) DEVICE_ID3;
 202              		.loc 1 346 17 is_stmt 0 view .LVU48
 203 0006 0433     		adds	r3, r3, #4
 204 0008 1C68     		ldr	r4, [r3]
 205              	.LVL10:
 347:Src/usbd_desc.c **** 
 206              		.loc 1 347 3 is_stmt 1 view .LVU49
 347:Src/usbd_desc.c **** 
 207              		.loc 1 347 17 is_stmt 0 view .LVU50
 208 000a 0433     		adds	r3, r3, #4
 209 000c 1B68     		ldr	r3, [r3]
 210              	.LVL11:
 349:Src/usbd_desc.c **** 
 211              		.loc 1 349 3 is_stmt 1 view .LVU51
 351:Src/usbd_desc.c ****   {
 212              		.loc 1 351 3 view .LVU52
 351:Src/usbd_desc.c ****   {
 213              		.loc 1 351 6 is_stmt 0 view .LVU53
 214 000e C018     		adds	r0, r0, r3
 215              	.LVL12:
 351:Src/usbd_desc.c ****   {
 216              		.loc 1 351 6 view .LVU54
 217 0010 00D1     		bne	.L20
 218              	.LVL13:
 219              	.L17:
 356:Src/usbd_desc.c **** 
 220              		.loc 1 356 1 view .LVU55
 221 0012 38BD     		pop	{r3, r4, r5, pc}
 222              	.LVL14:
 223              	.L20:
 353:Src/usbd_desc.c ****     IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 224              		.loc 1 353 5 is_stmt 1 view .LVU56
ARM GAS  /tmp/cchJJa9o.s 			page 12


 225 0014 064D     		ldr	r5, .L21+4
 226 0016 0822     		movs	r2, #8
 227 0018 A91C     		adds	r1, r5, #2
 228 001a FFF7FEFF 		bl	IntToUnicode
 229              	.LVL15:
 354:Src/usbd_desc.c ****   }
 230              		.loc 1 354 5 view .LVU57
 231 001e 0422     		movs	r2, #4
 232 0020 05F11201 		add	r1, r5, #18
 233 0024 2046     		mov	r0, r4
 234 0026 FFF7FEFF 		bl	IntToUnicode
 235              	.LVL16:
 356:Src/usbd_desc.c **** 
 236              		.loc 1 356 1 is_stmt 0 view .LVU58
 237 002a F2E7     		b	.L17
 238              	.L22:
 239              		.align	2
 240              	.L21:
 241 002c 9075FF1F 		.word	536835472
 242 0030 00000000 		.word	.LANCHOR2
 243              		.cfi_endproc
 244              	.LFE951:
 246              		.section	.text.USBD_CDC_SerialStrDescriptor,"ax",%progbits
 247              		.align	1
 248              		.global	USBD_CDC_SerialStrDescriptor
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 252              		.fpu fpv4-sp-d16
 254              	USBD_CDC_SerialStrDescriptor:
 255              	.LVL17:
 256              	.LFB948:
 283:Src/usbd_desc.c ****   UNUSED(speed);
 257              		.loc 1 283 1 is_stmt 1 view -0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 283:Src/usbd_desc.c ****   UNUSED(speed);
 261              		.loc 1 283 1 is_stmt 0 view .LVU60
 262 0000 08B5     		push	{r3, lr}
 263              	.LCFI3:
 264              		.cfi_def_cfa_offset 8
 265              		.cfi_offset 3, -8
 266              		.cfi_offset 14, -4
 284:Src/usbd_desc.c ****   *length = USB_SIZ_STRING_SERIAL;
 267              		.loc 1 284 3 is_stmt 1 view .LVU61
 285:Src/usbd_desc.c **** 
 268              		.loc 1 285 3 view .LVU62
 285:Src/usbd_desc.c **** 
 269              		.loc 1 285 11 is_stmt 0 view .LVU63
 270 0002 1A23     		movs	r3, #26
 271 0004 0B80     		strh	r3, [r1]	@ movhi
 289:Src/usbd_desc.c ****   
 272              		.loc 1 289 3 is_stmt 1 view .LVU64
 273 0006 FFF7FEFF 		bl	Get_SerialNum
 274              	.LVL18:
 295:Src/usbd_desc.c **** }
ARM GAS  /tmp/cchJJa9o.s 			page 13


 275              		.loc 1 295 3 view .LVU65
 296:Src/usbd_desc.c **** 
 276              		.loc 1 296 1 is_stmt 0 view .LVU66
 277 000a 0148     		ldr	r0, .L25
 278 000c 08BD     		pop	{r3, pc}
 279              	.L26:
 280 000e 00BF     		.align	2
 281              	.L25:
 282 0010 00000000 		.word	.LANCHOR2
 283              		.cfi_endproc
 284              	.LFE948:
 286              		.section	.rodata.USBD_CDC_ProductStrDescriptor.str1.4,"aMS",%progbits,1
 287              		.align	2
 288              	.LC0:
 289 0000 4D792056 		.ascii	"My Virtual ComPort\000"
 289      69727475 
 289      616C2043 
 289      6F6D506F 
 289      727400
 290              		.section	.text.USBD_CDC_ProductStrDescriptor,"ax",%progbits
 291              		.align	1
 292              		.global	USBD_CDC_ProductStrDescriptor
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 296              		.fpu fpv4-sp-d16
 298              	USBD_CDC_ProductStrDescriptor:
 299              	.LVL19:
 300              	.LFB946:
 251:Src/usbd_desc.c ****   if(speed == 0)
 301              		.loc 1 251 1 is_stmt 1 view -0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 251:Src/usbd_desc.c ****   if(speed == 0)
 305              		.loc 1 251 1 is_stmt 0 view .LVU68
 306 0000 08B5     		push	{r3, lr}
 307              	.LCFI4:
 308              		.cfi_def_cfa_offset 8
 309              		.cfi_offset 3, -8
 310              		.cfi_offset 14, -4
 311 0002 0A46     		mov	r2, r1
 252:Src/usbd_desc.c ****   {
 312              		.loc 1 252 3 is_stmt 1 view .LVU69
 252:Src/usbd_desc.c ****   {
 313              		.loc 1 252 5 is_stmt 0 view .LVU70
 314 0004 28B9     		cbnz	r0, .L28
 254:Src/usbd_desc.c ****   }
 315              		.loc 1 254 5 is_stmt 1 view .LVU71
 316 0006 0549     		ldr	r1, .L31
 317              	.LVL20:
 254:Src/usbd_desc.c ****   }
 318              		.loc 1 254 5 is_stmt 0 view .LVU72
 319 0008 0548     		ldr	r0, .L31+4
 320              	.LVL21:
 254:Src/usbd_desc.c ****   }
 321              		.loc 1 254 5 view .LVU73
ARM GAS  /tmp/cchJJa9o.s 			page 14


 322 000a FFF7FEFF 		bl	USBD_GetString
 323              	.LVL22:
 324              	.L29:
 260:Src/usbd_desc.c **** }
 325              		.loc 1 260 3 is_stmt 1 view .LVU74
 261:Src/usbd_desc.c **** 
 326              		.loc 1 261 1 is_stmt 0 view .LVU75
 327 000e 0348     		ldr	r0, .L31
 328 0010 08BD     		pop	{r3, pc}
 329              	.LVL23:
 330              	.L28:
 258:Src/usbd_desc.c ****   }
 331              		.loc 1 258 5 is_stmt 1 view .LVU76
 332 0012 0249     		ldr	r1, .L31
 333              	.LVL24:
 258:Src/usbd_desc.c ****   }
 334              		.loc 1 258 5 is_stmt 0 view .LVU77
 335 0014 0248     		ldr	r0, .L31+4
 336              	.LVL25:
 258:Src/usbd_desc.c ****   }
 337              		.loc 1 258 5 view .LVU78
 338 0016 FFF7FEFF 		bl	USBD_GetString
 339              	.LVL26:
 258:Src/usbd_desc.c ****   }
 340              		.loc 1 258 5 view .LVU79
 341 001a F8E7     		b	.L29
 342              	.L32:
 343              		.align	2
 344              	.L31:
 345 001c 00000000 		.word	USBD_StrDesc
 346 0020 00000000 		.word	.LC0
 347              		.cfi_endproc
 348              	.LFE946:
 350              		.section	.rodata.USBD_CDC_ManufacturerStrDescriptor.str1.4,"aMS",%progbits,1
 351              		.align	2
 352              	.LC1:
 353 0000 53544D69 		.ascii	"STMicroelectronics\000"
 353      63726F65 
 353      6C656374 
 353      726F6E69 
 353      637300
 354              		.section	.text.USBD_CDC_ManufacturerStrDescriptor,"ax",%progbits
 355              		.align	1
 356              		.global	USBD_CDC_ManufacturerStrDescriptor
 357              		.syntax unified
 358              		.thumb
 359              		.thumb_func
 360              		.fpu fpv4-sp-d16
 362              	USBD_CDC_ManufacturerStrDescriptor:
 363              	.LVL27:
 364              	.LFB947:
 270:Src/usbd_desc.c ****   UNUSED(speed);
 365              		.loc 1 270 1 is_stmt 1 view -0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 0
 270:Src/usbd_desc.c ****   UNUSED(speed);
ARM GAS  /tmp/cchJJa9o.s 			page 15


 369              		.loc 1 270 1 is_stmt 0 view .LVU81
 370 0000 10B5     		push	{r4, lr}
 371              	.LCFI5:
 372              		.cfi_def_cfa_offset 8
 373              		.cfi_offset 4, -8
 374              		.cfi_offset 14, -4
 375 0002 0A46     		mov	r2, r1
 271:Src/usbd_desc.c ****   USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 376              		.loc 1 271 3 is_stmt 1 view .LVU82
 272:Src/usbd_desc.c ****   return USBD_StrDesc;
 377              		.loc 1 272 3 view .LVU83
 378 0004 034C     		ldr	r4, .L35
 379 0006 2146     		mov	r1, r4
 380              	.LVL28:
 272:Src/usbd_desc.c ****   return USBD_StrDesc;
 381              		.loc 1 272 3 is_stmt 0 view .LVU84
 382 0008 0348     		ldr	r0, .L35+4
 383              	.LVL29:
 272:Src/usbd_desc.c ****   return USBD_StrDesc;
 384              		.loc 1 272 3 view .LVU85
 385 000a FFF7FEFF 		bl	USBD_GetString
 386              	.LVL30:
 273:Src/usbd_desc.c **** }
 387              		.loc 1 273 3 is_stmt 1 view .LVU86
 274:Src/usbd_desc.c **** 
 388              		.loc 1 274 1 is_stmt 0 view .LVU87
 389 000e 2046     		mov	r0, r4
 390 0010 10BD     		pop	{r4, pc}
 391              	.L36:
 392 0012 00BF     		.align	2
 393              	.L35:
 394 0014 00000000 		.word	USBD_StrDesc
 395 0018 00000000 		.word	.LC1
 396              		.cfi_endproc
 397              	.LFE947:
 399              		.section	.rodata.USBD_CDC_ConfigStrDescriptor.str1.4,"aMS",%progbits,1
 400              		.align	2
 401              	.LC2:
 402 0000 43444320 		.ascii	"CDC Config\000"
 402      436F6E66 
 402      696700
 403              		.section	.text.USBD_CDC_ConfigStrDescriptor,"ax",%progbits
 404              		.align	1
 405              		.global	USBD_CDC_ConfigStrDescriptor
 406              		.syntax unified
 407              		.thumb
 408              		.thumb_func
 409              		.fpu fpv4-sp-d16
 411              	USBD_CDC_ConfigStrDescriptor:
 412              	.LVL31:
 413              	.LFB949:
 305:Src/usbd_desc.c ****   if(speed == USBD_SPEED_HIGH)
 414              		.loc 1 305 1 is_stmt 1 view -0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 305:Src/usbd_desc.c ****   if(speed == USBD_SPEED_HIGH)
ARM GAS  /tmp/cchJJa9o.s 			page 16


 418              		.loc 1 305 1 is_stmt 0 view .LVU89
 419 0000 08B5     		push	{r3, lr}
 420              	.LCFI6:
 421              		.cfi_def_cfa_offset 8
 422              		.cfi_offset 3, -8
 423              		.cfi_offset 14, -4
 424 0002 0A46     		mov	r2, r1
 306:Src/usbd_desc.c ****   {
 425              		.loc 1 306 3 is_stmt 1 view .LVU90
 306:Src/usbd_desc.c ****   {
 426              		.loc 1 306 5 is_stmt 0 view .LVU91
 427 0004 28B9     		cbnz	r0, .L38
 308:Src/usbd_desc.c ****   }
 428              		.loc 1 308 5 is_stmt 1 view .LVU92
 429 0006 0549     		ldr	r1, .L41
 430              	.LVL32:
 308:Src/usbd_desc.c ****   }
 431              		.loc 1 308 5 is_stmt 0 view .LVU93
 432 0008 0548     		ldr	r0, .L41+4
 433              	.LVL33:
 308:Src/usbd_desc.c ****   }
 434              		.loc 1 308 5 view .LVU94
 435 000a FFF7FEFF 		bl	USBD_GetString
 436              	.LVL34:
 437              	.L39:
 314:Src/usbd_desc.c **** }
 438              		.loc 1 314 3 is_stmt 1 view .LVU95
 315:Src/usbd_desc.c **** 
 439              		.loc 1 315 1 is_stmt 0 view .LVU96
 440 000e 0348     		ldr	r0, .L41
 441 0010 08BD     		pop	{r3, pc}
 442              	.LVL35:
 443              	.L38:
 312:Src/usbd_desc.c ****   }
 444              		.loc 1 312 5 is_stmt 1 view .LVU97
 445 0012 0249     		ldr	r1, .L41
 446              	.LVL36:
 312:Src/usbd_desc.c ****   }
 447              		.loc 1 312 5 is_stmt 0 view .LVU98
 448 0014 0248     		ldr	r0, .L41+4
 449              	.LVL37:
 312:Src/usbd_desc.c ****   }
 450              		.loc 1 312 5 view .LVU99
 451 0016 FFF7FEFF 		bl	USBD_GetString
 452              	.LVL38:
 312:Src/usbd_desc.c ****   }
 453              		.loc 1 312 5 view .LVU100
 454 001a F8E7     		b	.L39
 455              	.L42:
 456              		.align	2
 457              	.L41:
 458 001c 00000000 		.word	USBD_StrDesc
 459 0020 00000000 		.word	.LC2
 460              		.cfi_endproc
 461              	.LFE949:
 463              		.section	.rodata.USBD_CDC_InterfaceStrDescriptor.str1.4,"aMS",%progbits,1
 464              		.align	2
ARM GAS  /tmp/cchJJa9o.s 			page 17


 465              	.LC3:
 466 0000 43444320 		.ascii	"CDC Interface\000"
 466      496E7465 
 466      72666163 
 466      6500
 467              		.section	.text.USBD_CDC_InterfaceStrDescriptor,"ax",%progbits
 468              		.align	1
 469              		.global	USBD_CDC_InterfaceStrDescriptor
 470              		.syntax unified
 471              		.thumb
 472              		.thumb_func
 473              		.fpu fpv4-sp-d16
 475              	USBD_CDC_InterfaceStrDescriptor:
 476              	.LVL39:
 477              	.LFB950:
 324:Src/usbd_desc.c ****   if(speed == 0)
 478              		.loc 1 324 1 is_stmt 1 view -0
 479              		.cfi_startproc
 480              		@ args = 0, pretend = 0, frame = 0
 481              		@ frame_needed = 0, uses_anonymous_args = 0
 324:Src/usbd_desc.c ****   if(speed == 0)
 482              		.loc 1 324 1 is_stmt 0 view .LVU102
 483 0000 08B5     		push	{r3, lr}
 484              	.LCFI7:
 485              		.cfi_def_cfa_offset 8
 486              		.cfi_offset 3, -8
 487              		.cfi_offset 14, -4
 488 0002 0A46     		mov	r2, r1
 325:Src/usbd_desc.c ****   {
 489              		.loc 1 325 3 is_stmt 1 view .LVU103
 325:Src/usbd_desc.c ****   {
 490              		.loc 1 325 5 is_stmt 0 view .LVU104
 491 0004 28B9     		cbnz	r0, .L44
 327:Src/usbd_desc.c ****   }
 492              		.loc 1 327 5 is_stmt 1 view .LVU105
 493 0006 0549     		ldr	r1, .L47
 494              	.LVL40:
 327:Src/usbd_desc.c ****   }
 495              		.loc 1 327 5 is_stmt 0 view .LVU106
 496 0008 0548     		ldr	r0, .L47+4
 497              	.LVL41:
 327:Src/usbd_desc.c ****   }
 498              		.loc 1 327 5 view .LVU107
 499 000a FFF7FEFF 		bl	USBD_GetString
 500              	.LVL42:
 501              	.L45:
 333:Src/usbd_desc.c **** }
 502              		.loc 1 333 3 is_stmt 1 view .LVU108
 334:Src/usbd_desc.c **** 
 503              		.loc 1 334 1 is_stmt 0 view .LVU109
 504 000e 0348     		ldr	r0, .L47
 505 0010 08BD     		pop	{r3, pc}
 506              	.LVL43:
 507              	.L44:
 331:Src/usbd_desc.c ****   }
 508              		.loc 1 331 5 is_stmt 1 view .LVU110
 509 0012 0249     		ldr	r1, .L47
ARM GAS  /tmp/cchJJa9o.s 			page 18


 510              	.LVL44:
 331:Src/usbd_desc.c ****   }
 511              		.loc 1 331 5 is_stmt 0 view .LVU111
 512 0014 0248     		ldr	r0, .L47+4
 513              	.LVL45:
 331:Src/usbd_desc.c ****   }
 514              		.loc 1 331 5 view .LVU112
 515 0016 FFF7FEFF 		bl	USBD_GetString
 516              	.LVL46:
 331:Src/usbd_desc.c ****   }
 517              		.loc 1 331 5 view .LVU113
 518 001a F8E7     		b	.L45
 519              	.L48:
 520              		.align	2
 521              	.L47:
 522 001c 00000000 		.word	USBD_StrDesc
 523 0020 00000000 		.word	.LC3
 524              		.cfi_endproc
 525              	.LFE950:
 527              		.global	USBD_StringSerial
 528              		.comm	USBD_StrDesc,512,4
 529              		.global	USBD_LangIDDesc
 530              		.global	USBD_CDC_DeviceDesc
 531              		.global	CDC_Desc
 532              		.section	.data.CDC_Desc,"aw"
 533              		.align	2
 536              	CDC_Desc:
 537 0000 00000000 		.word	USBD_CDC_DeviceDescriptor
 538 0004 00000000 		.word	USBD_CDC_LangIDStrDescriptor
 539 0008 00000000 		.word	USBD_CDC_ManufacturerStrDescriptor
 540 000c 00000000 		.word	USBD_CDC_ProductStrDescriptor
 541 0010 00000000 		.word	USBD_CDC_SerialStrDescriptor
 542 0014 00000000 		.word	USBD_CDC_ConfigStrDescriptor
 543 0018 00000000 		.word	USBD_CDC_InterfaceStrDescriptor
 544 001c 00000000 		.space	4
 545              		.section	.data.USBD_CDC_DeviceDesc,"aw"
 546              		.align	2
 547              		.set	.LANCHOR0,. + 0
 550              	USBD_CDC_DeviceDesc:
 551 0000 12010002 		.ascii	"\022\001\000\002\002\002\000@\203\004@W\000\002\001"
 551      02020040 
 551      83044057 
 551      000201
 552 000f 020301   		.ascii	"\002\003\001"
 553              		.section	.data.USBD_LangIDDesc,"aw"
 554              		.align	2
 555              		.set	.LANCHOR1,. + 0
 558              	USBD_LangIDDesc:
 559 0000 04030904 		.ascii	"\004\003\011\004"
 560              		.section	.data.USBD_StringSerial,"aw"
 561              		.align	2
 562              		.set	.LANCHOR2,. + 0
 565              	USBD_StringSerial:
 566 0000 1A0300   		.ascii	"\032\003\000"
 567 0003 00000000 		.space	23
 567      00000000 
 567      00000000 
ARM GAS  /tmp/cchJJa9o.s 			page 19


 567      00000000 
 567      00000000 
 568              		.text
 569              	.Letext0:
 570              		.file 2 "/home/nyanko/gcc/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/machine/_default
 571              		.file 3 "/home/nyanko/gcc/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/lock.h"
 572              		.file 4 "/home/nyanko/gcc/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/_types.h"
 573              		.file 5 "/home/nyanko/gcc/gcc-arm-none-eabi-9-2019-q4-major/lib/gcc/arm-none-eabi/9.2.1/include/st
 574              		.file 6 "/home/nyanko/gcc/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/reent.h"
 575              		.file 7 "/home/nyanko/gcc/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/_stdint.h"
 576              		.file 8 "/home/nyanko/gcc/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/stdlib.h"
 577              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 578              		.file 10 "Drivers/CMSIS/Device/ST/STM32WBxx/Include/system_stm32wbxx.h"
 579              		.file 11 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_def.h"
 580              		.file 12 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_flash.h"
 581              		.file 13 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal.h"
 582              		.file 14 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 583              		.file 15 "Inc/usbd_desc.h"
 584              		.file 16 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_ctlreq.h"
ARM GAS  /tmp/cchJJa9o.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbd_desc.c
     /tmp/cchJJa9o.s:18     .text.USBD_CDC_DeviceDescriptor:0000000000000000 $t
     /tmp/cchJJa9o.s:26     .text.USBD_CDC_DeviceDescriptor:0000000000000000 USBD_CDC_DeviceDescriptor
     /tmp/cchJJa9o.s:49     .text.USBD_CDC_DeviceDescriptor:0000000000000008 $d
     /tmp/cchJJa9o.s:54     .text.USBD_CDC_LangIDStrDescriptor:0000000000000000 $t
     /tmp/cchJJa9o.s:61     .text.USBD_CDC_LangIDStrDescriptor:0000000000000000 USBD_CDC_LangIDStrDescriptor
     /tmp/cchJJa9o.s:83     .text.USBD_CDC_LangIDStrDescriptor:0000000000000008 $d
     /tmp/cchJJa9o.s:88     .text.IntToUnicode:0000000000000000 $t
     /tmp/cchJJa9o.s:94     .text.IntToUnicode:0000000000000000 IntToUnicode
     /tmp/cchJJa9o.s:176    .text.Get_SerialNum:0000000000000000 $t
     /tmp/cchJJa9o.s:182    .text.Get_SerialNum:0000000000000000 Get_SerialNum
     /tmp/cchJJa9o.s:241    .text.Get_SerialNum:000000000000002c $d
     /tmp/cchJJa9o.s:247    .text.USBD_CDC_SerialStrDescriptor:0000000000000000 $t
     /tmp/cchJJa9o.s:254    .text.USBD_CDC_SerialStrDescriptor:0000000000000000 USBD_CDC_SerialStrDescriptor
     /tmp/cchJJa9o.s:282    .text.USBD_CDC_SerialStrDescriptor:0000000000000010 $d
     /tmp/cchJJa9o.s:287    .rodata.USBD_CDC_ProductStrDescriptor.str1.4:0000000000000000 $d
     /tmp/cchJJa9o.s:291    .text.USBD_CDC_ProductStrDescriptor:0000000000000000 $t
     /tmp/cchJJa9o.s:298    .text.USBD_CDC_ProductStrDescriptor:0000000000000000 USBD_CDC_ProductStrDescriptor
     /tmp/cchJJa9o.s:345    .text.USBD_CDC_ProductStrDescriptor:000000000000001c $d
                            *COM*:0000000000000200 USBD_StrDesc
     /tmp/cchJJa9o.s:351    .rodata.USBD_CDC_ManufacturerStrDescriptor.str1.4:0000000000000000 $d
     /tmp/cchJJa9o.s:355    .text.USBD_CDC_ManufacturerStrDescriptor:0000000000000000 $t
     /tmp/cchJJa9o.s:362    .text.USBD_CDC_ManufacturerStrDescriptor:0000000000000000 USBD_CDC_ManufacturerStrDescriptor
     /tmp/cchJJa9o.s:394    .text.USBD_CDC_ManufacturerStrDescriptor:0000000000000014 $d
     /tmp/cchJJa9o.s:400    .rodata.USBD_CDC_ConfigStrDescriptor.str1.4:0000000000000000 $d
     /tmp/cchJJa9o.s:404    .text.USBD_CDC_ConfigStrDescriptor:0000000000000000 $t
     /tmp/cchJJa9o.s:411    .text.USBD_CDC_ConfigStrDescriptor:0000000000000000 USBD_CDC_ConfigStrDescriptor
     /tmp/cchJJa9o.s:458    .text.USBD_CDC_ConfigStrDescriptor:000000000000001c $d
     /tmp/cchJJa9o.s:464    .rodata.USBD_CDC_InterfaceStrDescriptor.str1.4:0000000000000000 $d
     /tmp/cchJJa9o.s:468    .text.USBD_CDC_InterfaceStrDescriptor:0000000000000000 $t
     /tmp/cchJJa9o.s:475    .text.USBD_CDC_InterfaceStrDescriptor:0000000000000000 USBD_CDC_InterfaceStrDescriptor
     /tmp/cchJJa9o.s:522    .text.USBD_CDC_InterfaceStrDescriptor:000000000000001c $d
     /tmp/cchJJa9o.s:565    .data.USBD_StringSerial:0000000000000000 USBD_StringSerial
     /tmp/cchJJa9o.s:558    .data.USBD_LangIDDesc:0000000000000000 USBD_LangIDDesc
     /tmp/cchJJa9o.s:550    .data.USBD_CDC_DeviceDesc:0000000000000000 USBD_CDC_DeviceDesc
     /tmp/cchJJa9o.s:536    .data.CDC_Desc:0000000000000000 CDC_Desc
     /tmp/cchJJa9o.s:533    .data.CDC_Desc:0000000000000000 $d
     /tmp/cchJJa9o.s:546    .data.USBD_CDC_DeviceDesc:0000000000000000 $d
     /tmp/cchJJa9o.s:554    .data.USBD_LangIDDesc:0000000000000000 $d
     /tmp/cchJJa9o.s:561    .data.USBD_StringSerial:0000000000000000 $d

UNDEFINED SYMBOLS
USBD_GetString
