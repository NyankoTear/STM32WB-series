ARM GAS  /tmp/ccswi04o.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usbd_cdc_if.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CDC_DeInit_FS,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	CDC_DeInit_FS:
  26              	.LFB945:
  27              		.file 1 "Src/usbd_cdc_if.c"
   1:Src/usbd_cdc_if.c **** /* USER CODE BEGIN Header */
   2:Src/usbd_cdc_if.c **** /**
   3:Src/usbd_cdc_if.c ****   ******************************************************************************
   4:Src/usbd_cdc_if.c ****   * @file           : usbd_cdc_if.c
   5:Src/usbd_cdc_if.c ****   * @version        : v3.0_Cube
   6:Src/usbd_cdc_if.c ****   * @brief          : Usb device for Virtual Com Port.
   7:Src/usbd_cdc_if.c ****   ******************************************************************************
   8:Src/usbd_cdc_if.c ****   * @attention
   9:Src/usbd_cdc_if.c ****   *
  10:Src/usbd_cdc_if.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  11:Src/usbd_cdc_if.c ****   * All rights reserved.</center></h2>
  12:Src/usbd_cdc_if.c ****   *
  13:Src/usbd_cdc_if.c ****   * This software component is licensed by ST under Ultimate Liberty license
  14:Src/usbd_cdc_if.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  15:Src/usbd_cdc_if.c ****   * the License. You may obtain a copy of the License at:
  16:Src/usbd_cdc_if.c ****   *                             www.st.com/SLA0044
  17:Src/usbd_cdc_if.c ****   *
  18:Src/usbd_cdc_if.c ****   ******************************************************************************
  19:Src/usbd_cdc_if.c ****   */
  20:Src/usbd_cdc_if.c **** /* USER CODE END Header */
  21:Src/usbd_cdc_if.c **** 
  22:Src/usbd_cdc_if.c **** /* Includes ------------------------------------------------------------------*/
  23:Src/usbd_cdc_if.c **** #include "usbd_cdc_if.h"
  24:Src/usbd_cdc_if.c **** 
  25:Src/usbd_cdc_if.c **** /* USER CODE BEGIN INCLUDE */
  26:Src/usbd_cdc_if.c **** 
  27:Src/usbd_cdc_if.c **** /* USER CODE END INCLUDE */
  28:Src/usbd_cdc_if.c **** 
  29:Src/usbd_cdc_if.c **** /* Private typedef -----------------------------------------------------------*/
  30:Src/usbd_cdc_if.c **** /* Private define ------------------------------------------------------------*/
  31:Src/usbd_cdc_if.c **** /* Private macro -------------------------------------------------------------*/
ARM GAS  /tmp/ccswi04o.s 			page 2


  32:Src/usbd_cdc_if.c **** 
  33:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PV */
  34:Src/usbd_cdc_if.c **** /* Private variables ---------------------------------------------------------*/
  35:Src/usbd_cdc_if.c **** uint8_t buffer[7];
  36:Src/usbd_cdc_if.c **** /* USER CODE END PV */
  37:Src/usbd_cdc_if.c **** 
  38:Src/usbd_cdc_if.c **** /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
  39:Src/usbd_cdc_if.c ****   * @brief Usb device library.
  40:Src/usbd_cdc_if.c ****   * @{
  41:Src/usbd_cdc_if.c ****   */
  42:Src/usbd_cdc_if.c **** 
  43:Src/usbd_cdc_if.c **** /** @addtogroup USBD_CDC_IF
  44:Src/usbd_cdc_if.c ****   * @{
  45:Src/usbd_cdc_if.c ****   */
  46:Src/usbd_cdc_if.c **** 
  47:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_TypesDefinitions USBD_CDC_IF_Private_TypesDefinitions
  48:Src/usbd_cdc_if.c ****   * @brief Private types.
  49:Src/usbd_cdc_if.c ****   * @{
  50:Src/usbd_cdc_if.c ****   */
  51:Src/usbd_cdc_if.c **** 
  52:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_TYPES */
  53:Src/usbd_cdc_if.c **** 
  54:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_TYPES */
  55:Src/usbd_cdc_if.c **** 
  56:Src/usbd_cdc_if.c **** /**
  57:Src/usbd_cdc_if.c ****   * @}
  58:Src/usbd_cdc_if.c ****   */
  59:Src/usbd_cdc_if.c **** 
  60:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_Defines USBD_CDC_IF_Private_Defines
  61:Src/usbd_cdc_if.c ****   * @brief Private defines.
  62:Src/usbd_cdc_if.c ****   * @{
  63:Src/usbd_cdc_if.c ****   */
  64:Src/usbd_cdc_if.c **** 
  65:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_DEFINES */
  66:Src/usbd_cdc_if.c **** /* Define size for the receive and transmit buffer over CDC */
  67:Src/usbd_cdc_if.c **** /* It's up to user to redefine and/or remove those define */
  68:Src/usbd_cdc_if.c **** #define APP_RX_DATA_SIZE  2048
  69:Src/usbd_cdc_if.c **** #define APP_TX_DATA_SIZE  2048
  70:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_DEFINES */
  71:Src/usbd_cdc_if.c **** 
  72:Src/usbd_cdc_if.c **** /**
  73:Src/usbd_cdc_if.c ****   * @}
  74:Src/usbd_cdc_if.c ****   */
  75:Src/usbd_cdc_if.c **** 
  76:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_Macros USBD_CDC_IF_Private_Macros
  77:Src/usbd_cdc_if.c ****   * @brief Private macros.
  78:Src/usbd_cdc_if.c ****   * @{
  79:Src/usbd_cdc_if.c ****   */
  80:Src/usbd_cdc_if.c **** 
  81:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_MACRO */
  82:Src/usbd_cdc_if.c **** 
  83:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_MACRO */
  84:Src/usbd_cdc_if.c **** 
  85:Src/usbd_cdc_if.c **** /**
  86:Src/usbd_cdc_if.c ****   * @}
  87:Src/usbd_cdc_if.c ****   */
  88:Src/usbd_cdc_if.c **** 
ARM GAS  /tmp/ccswi04o.s 			page 3


  89:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_Variables USBD_CDC_IF_Private_Variables
  90:Src/usbd_cdc_if.c ****   * @brief Private variables.
  91:Src/usbd_cdc_if.c ****   * @{
  92:Src/usbd_cdc_if.c ****   */
  93:Src/usbd_cdc_if.c **** /* Create buffer for reception and transmission           */
  94:Src/usbd_cdc_if.c **** /* It's up to user to redefine and/or remove those define */
  95:Src/usbd_cdc_if.c **** /** Received data over USB are stored in this buffer      */
  96:Src/usbd_cdc_if.c **** uint8_t UserRxBufferFS[APP_RX_DATA_SIZE];
  97:Src/usbd_cdc_if.c **** 
  98:Src/usbd_cdc_if.c **** /** Data to send over USB CDC are stored in this buffer   */
  99:Src/usbd_cdc_if.c **** uint8_t UserTxBufferFS[APP_TX_DATA_SIZE];
 100:Src/usbd_cdc_if.c **** 
 101:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_VARIABLES */
 102:Src/usbd_cdc_if.c **** 
 103:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_VARIABLES */
 104:Src/usbd_cdc_if.c **** 
 105:Src/usbd_cdc_if.c **** /**
 106:Src/usbd_cdc_if.c ****   * @}
 107:Src/usbd_cdc_if.c ****   */
 108:Src/usbd_cdc_if.c **** 
 109:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Exported_Variables USBD_CDC_IF_Exported_Variables
 110:Src/usbd_cdc_if.c ****   * @brief Public variables.
 111:Src/usbd_cdc_if.c ****   * @{
 112:Src/usbd_cdc_if.c ****   */
 113:Src/usbd_cdc_if.c **** 
 114:Src/usbd_cdc_if.c **** extern USBD_HandleTypeDef hUsbDeviceFS;
 115:Src/usbd_cdc_if.c **** 
 116:Src/usbd_cdc_if.c **** /* USER CODE BEGIN EXPORTED_VARIABLES */
 117:Src/usbd_cdc_if.c **** 
 118:Src/usbd_cdc_if.c **** /* USER CODE END EXPORTED_VARIABLES */
 119:Src/usbd_cdc_if.c **** 
 120:Src/usbd_cdc_if.c **** /**
 121:Src/usbd_cdc_if.c ****   * @}
 122:Src/usbd_cdc_if.c ****   */
 123:Src/usbd_cdc_if.c **** 
 124:Src/usbd_cdc_if.c **** /** @defgroup USBD_CDC_IF_Private_FunctionPrototypes USBD_CDC_IF_Private_FunctionPrototypes
 125:Src/usbd_cdc_if.c ****   * @brief Private functions declaration.
 126:Src/usbd_cdc_if.c ****   * @{
 127:Src/usbd_cdc_if.c ****   */
 128:Src/usbd_cdc_if.c **** 
 129:Src/usbd_cdc_if.c **** static int8_t CDC_Init_FS(void);
 130:Src/usbd_cdc_if.c **** static int8_t CDC_DeInit_FS(void);
 131:Src/usbd_cdc_if.c **** static int8_t CDC_Control_FS(uint8_t cmd, uint8_t* pbuf, uint16_t length);
 132:Src/usbd_cdc_if.c **** static int8_t CDC_Receive_FS(uint8_t* pbuf, uint32_t *Len);
 133:Src/usbd_cdc_if.c **** 
 134:Src/usbd_cdc_if.c **** /* USER CODE BEGIN PRIVATE_FUNCTIONS_DECLARATION */
 135:Src/usbd_cdc_if.c **** 
 136:Src/usbd_cdc_if.c **** /* USER CODE END PRIVATE_FUNCTIONS_DECLARATION */
 137:Src/usbd_cdc_if.c **** 
 138:Src/usbd_cdc_if.c **** /**
 139:Src/usbd_cdc_if.c ****   * @}
 140:Src/usbd_cdc_if.c ****   */
 141:Src/usbd_cdc_if.c **** 
 142:Src/usbd_cdc_if.c **** USBD_CDC_ItfTypeDef USBD_Interface_fops_FS =
 143:Src/usbd_cdc_if.c **** {
 144:Src/usbd_cdc_if.c ****   CDC_Init_FS,
 145:Src/usbd_cdc_if.c ****   CDC_DeInit_FS,
ARM GAS  /tmp/ccswi04o.s 			page 4


 146:Src/usbd_cdc_if.c ****   CDC_Control_FS,
 147:Src/usbd_cdc_if.c ****   CDC_Receive_FS
 148:Src/usbd_cdc_if.c **** };
 149:Src/usbd_cdc_if.c **** 
 150:Src/usbd_cdc_if.c **** /* Private functions ---------------------------------------------------------*/
 151:Src/usbd_cdc_if.c **** /**
 152:Src/usbd_cdc_if.c ****   * @brief  Initializes the CDC media low layer over the FS USB IP
 153:Src/usbd_cdc_if.c ****   * @retval USBD_OK if all operations are OK else USBD_FAIL
 154:Src/usbd_cdc_if.c ****   */
 155:Src/usbd_cdc_if.c **** static int8_t CDC_Init_FS(void)
 156:Src/usbd_cdc_if.c **** {
 157:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 3 */
 158:Src/usbd_cdc_if.c ****   /* Set Application Buffers */
 159:Src/usbd_cdc_if.c ****   USBD_CDC_SetTxBuffer(&hUsbDeviceFS, UserTxBufferFS, 0);
 160:Src/usbd_cdc_if.c ****   USBD_CDC_SetRxBuffer(&hUsbDeviceFS, UserRxBufferFS);
 161:Src/usbd_cdc_if.c ****   return (USBD_OK);
 162:Src/usbd_cdc_if.c ****   /* USER CODE END 3 */
 163:Src/usbd_cdc_if.c **** }
 164:Src/usbd_cdc_if.c **** 
 165:Src/usbd_cdc_if.c **** /**
 166:Src/usbd_cdc_if.c ****   * @brief  DeInitializes the CDC media low layer
 167:Src/usbd_cdc_if.c ****   * @retval USBD_OK if all operations are OK else USBD_FAIL
 168:Src/usbd_cdc_if.c ****   */
 169:Src/usbd_cdc_if.c **** static int8_t CDC_DeInit_FS(void)
 170:Src/usbd_cdc_if.c **** {
  28              		.loc 1 170 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 171:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 4 */
 172:Src/usbd_cdc_if.c ****   return (USBD_OK);
  33              		.loc 1 172 3 view .LVU1
 173:Src/usbd_cdc_if.c ****   /* USER CODE END 4 */
 174:Src/usbd_cdc_if.c **** }
  34              		.loc 1 174 1 is_stmt 0 view .LVU2
  35 0000 0020     		movs	r0, #0
  36 0002 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE945:
  40              		.section	.text.CDC_Control_FS,"ax",%progbits
  41              		.align	1
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	CDC_Control_FS:
  48              	.LVL0:
  49              	.LFB946:
 175:Src/usbd_cdc_if.c **** 
 176:Src/usbd_cdc_if.c **** /**
 177:Src/usbd_cdc_if.c ****   * @brief  Manage the CDC class requests
 178:Src/usbd_cdc_if.c ****   * @param  cmd: Command code
 179:Src/usbd_cdc_if.c ****   * @param  pbuf: Buffer containing command data (request parameters)
 180:Src/usbd_cdc_if.c ****   * @param  length: Number of data to be sent (in bytes)
 181:Src/usbd_cdc_if.c ****   * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
 182:Src/usbd_cdc_if.c ****   */
ARM GAS  /tmp/ccswi04o.s 			page 5


 183:Src/usbd_cdc_if.c **** static int8_t CDC_Control_FS(uint8_t cmd, uint8_t* pbuf, uint16_t length)
 184:Src/usbd_cdc_if.c **** {
  50              		.loc 1 184 1 is_stmt 1 view -0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
 185:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 5 */
 186:Src/usbd_cdc_if.c ****   uint8_t i = 0;
  55              		.loc 1 186 3 view .LVU4
 187:Src/usbd_cdc_if.c **** 
 188:Src/usbd_cdc_if.c ****   switch(cmd)
  56              		.loc 1 188 3 view .LVU5
  57 0000 2028     		cmp	r0, #32
  58 0002 0BD0     		beq	.L8
  59 0004 2128     		cmp	r0, #33
  60 0006 13D0     		beq	.L9
  61              	.LVL1:
  62              	.L5:
 189:Src/usbd_cdc_if.c ****   {
 190:Src/usbd_cdc_if.c ****     case CDC_SEND_ENCAPSULATED_COMMAND:
 191:Src/usbd_cdc_if.c **** 
 192:Src/usbd_cdc_if.c ****     break;
 193:Src/usbd_cdc_if.c **** 
 194:Src/usbd_cdc_if.c ****     case CDC_GET_ENCAPSULATED_RESPONSE:
 195:Src/usbd_cdc_if.c **** 
 196:Src/usbd_cdc_if.c ****     break;
 197:Src/usbd_cdc_if.c **** 
 198:Src/usbd_cdc_if.c ****     case CDC_SET_COMM_FEATURE:
 199:Src/usbd_cdc_if.c **** 
 200:Src/usbd_cdc_if.c ****     break;
 201:Src/usbd_cdc_if.c **** 
 202:Src/usbd_cdc_if.c ****     case CDC_GET_COMM_FEATURE:
 203:Src/usbd_cdc_if.c **** 
 204:Src/usbd_cdc_if.c ****     break;
 205:Src/usbd_cdc_if.c **** 
 206:Src/usbd_cdc_if.c ****     case CDC_CLEAR_COMM_FEATURE:
 207:Src/usbd_cdc_if.c **** 
 208:Src/usbd_cdc_if.c ****     break;
 209:Src/usbd_cdc_if.c **** 
 210:Src/usbd_cdc_if.c ****   /*******************************************************************************/
 211:Src/usbd_cdc_if.c ****   /* Line Coding Structure                                                       */
 212:Src/usbd_cdc_if.c ****   /*-----------------------------------------------------------------------------*/
 213:Src/usbd_cdc_if.c ****   /* Offset | Field       | Size | Value  | Description                          */
 214:Src/usbd_cdc_if.c ****   /* 0      | dwDTERate   |   4  | Number |Data terminal rate, in bits per second*/
 215:Src/usbd_cdc_if.c ****   /* 4      | bCharFormat |   1  | Number | Stop bits                            */
 216:Src/usbd_cdc_if.c ****   /*                                        0 - 1 Stop bit                       */
 217:Src/usbd_cdc_if.c ****   /*                                        1 - 1.5 Stop bits                    */
 218:Src/usbd_cdc_if.c ****   /*                                        2 - 2 Stop bits                      */
 219:Src/usbd_cdc_if.c ****   /* 5      | bParityType |  1   | Number | Parity                               */
 220:Src/usbd_cdc_if.c ****   /*                                        0 - None                             */
 221:Src/usbd_cdc_if.c ****   /*                                        1 - Odd                              */
 222:Src/usbd_cdc_if.c ****   /*                                        2 - Even                             */
 223:Src/usbd_cdc_if.c ****   /*                                        3 - Mark                             */
 224:Src/usbd_cdc_if.c ****   /*                                        4 - Space                            */
 225:Src/usbd_cdc_if.c ****   /* 6      | bDataBits  |   1   | Number Data bits (5, 6, 7, 8 or 16).          */
 226:Src/usbd_cdc_if.c ****   /*******************************************************************************/
ARM GAS  /tmp/ccswi04o.s 			page 6


 227:Src/usbd_cdc_if.c ****     case CDC_SET_LINE_CODING:
 228:Src/usbd_cdc_if.c ****       for (i = 0; i < 7; i++){
 229:Src/usbd_cdc_if.c ****         buffer[i] = pbuf[i];
 230:Src/usbd_cdc_if.c ****       }
 231:Src/usbd_cdc_if.c ****     break;
 232:Src/usbd_cdc_if.c **** 
 233:Src/usbd_cdc_if.c ****     case CDC_GET_LINE_CODING:
 234:Src/usbd_cdc_if.c ****       for (i = 0; i < 7; i++){
 235:Src/usbd_cdc_if.c ****          pbuf[i] = buffer[i];
 236:Src/usbd_cdc_if.c ****       }
 237:Src/usbd_cdc_if.c ****     break;
 238:Src/usbd_cdc_if.c **** 
 239:Src/usbd_cdc_if.c ****     case CDC_SET_CONTROL_LINE_STATE:
 240:Src/usbd_cdc_if.c **** 
 241:Src/usbd_cdc_if.c ****     break;
 242:Src/usbd_cdc_if.c **** 
 243:Src/usbd_cdc_if.c ****     case CDC_SEND_BREAK:
 244:Src/usbd_cdc_if.c **** 
 245:Src/usbd_cdc_if.c ****     break;
 246:Src/usbd_cdc_if.c **** 
 247:Src/usbd_cdc_if.c ****   default:
 248:Src/usbd_cdc_if.c ****     break;
 249:Src/usbd_cdc_if.c ****   }
 250:Src/usbd_cdc_if.c **** 
 251:Src/usbd_cdc_if.c ****   return (USBD_OK);
  63              		.loc 1 251 3 view .LVU6
 252:Src/usbd_cdc_if.c ****   /* USER CODE END 5 */
 253:Src/usbd_cdc_if.c **** }
  64              		.loc 1 253 1 is_stmt 0 view .LVU7
  65 0008 0020     		movs	r0, #0
  66 000a 7047     		bx	lr
  67              	.LVL2:
  68              	.L6:
 229:Src/usbd_cdc_if.c ****       }
  69              		.loc 1 229 9 is_stmt 1 discriminator 3 view .LVU8
 229:Src/usbd_cdc_if.c ****       }
  70              		.loc 1 229 25 is_stmt 0 discriminator 3 view .LVU9
  71 000c C85C     		ldrb	r0, [r1, r3]	@ zero_extendqisi2
 229:Src/usbd_cdc_if.c ****       }
  72              		.loc 1 229 19 discriminator 3 view .LVU10
  73 000e 094A     		ldr	r2, .L10
  74 0010 D054     		strb	r0, [r2, r3]
 228:Src/usbd_cdc_if.c ****         buffer[i] = pbuf[i];
  75              		.loc 1 228 26 is_stmt 1 discriminator 3 view .LVU11
 228:Src/usbd_cdc_if.c ****         buffer[i] = pbuf[i];
  76              		.loc 1 228 27 is_stmt 0 discriminator 3 view .LVU12
  77 0012 0133     		adds	r3, r3, #1
  78              	.LVL3:
 228:Src/usbd_cdc_if.c ****         buffer[i] = pbuf[i];
  79              		.loc 1 228 27 discriminator 3 view .LVU13
  80 0014 DBB2     		uxtb	r3, r3
  81              	.LVL4:
  82              	.L3:
 228:Src/usbd_cdc_if.c ****         buffer[i] = pbuf[i];
  83              		.loc 1 228 19 is_stmt 1 discriminator 1 view .LVU14
 228:Src/usbd_cdc_if.c ****         buffer[i] = pbuf[i];
  84              		.loc 1 228 7 is_stmt 0 discriminator 1 view .LVU15
ARM GAS  /tmp/ccswi04o.s 			page 7


  85 0016 062B     		cmp	r3, #6
  86 0018 F8D9     		bls	.L6
  87 001a F5E7     		b	.L5
  88              	.LVL5:
  89              	.L8:
 188:Src/usbd_cdc_if.c ****   {
  90              		.loc 1 188 3 view .LVU16
  91 001c 0023     		movs	r3, #0
  92 001e FAE7     		b	.L3
  93              	.LVL6:
  94              	.L7:
 235:Src/usbd_cdc_if.c ****       }
  95              		.loc 1 235 10 is_stmt 1 discriminator 3 view .LVU17
 235:Src/usbd_cdc_if.c ****       }
  96              		.loc 1 235 26 is_stmt 0 discriminator 3 view .LVU18
  97 0020 044A     		ldr	r2, .L10
  98 0022 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 235:Src/usbd_cdc_if.c ****       }
  99              		.loc 1 235 18 discriminator 3 view .LVU19
 100 0024 CA54     		strb	r2, [r1, r3]
 234:Src/usbd_cdc_if.c ****          pbuf[i] = buffer[i];
 101              		.loc 1 234 26 is_stmt 1 discriminator 3 view .LVU20
 234:Src/usbd_cdc_if.c ****          pbuf[i] = buffer[i];
 102              		.loc 1 234 27 is_stmt 0 discriminator 3 view .LVU21
 103 0026 0133     		adds	r3, r3, #1
 104              	.LVL7:
 234:Src/usbd_cdc_if.c ****          pbuf[i] = buffer[i];
 105              		.loc 1 234 27 discriminator 3 view .LVU22
 106 0028 DBB2     		uxtb	r3, r3
 107              	.LVL8:
 108              	.L4:
 234:Src/usbd_cdc_if.c ****          pbuf[i] = buffer[i];
 109              		.loc 1 234 19 is_stmt 1 discriminator 1 view .LVU23
 234:Src/usbd_cdc_if.c ****          pbuf[i] = buffer[i];
 110              		.loc 1 234 7 is_stmt 0 discriminator 1 view .LVU24
 111 002a 062B     		cmp	r3, #6
 112 002c F8D9     		bls	.L7
 113 002e EBE7     		b	.L5
 114              	.LVL9:
 115              	.L9:
 188:Src/usbd_cdc_if.c ****   {
 116              		.loc 1 188 3 view .LVU25
 117 0030 0023     		movs	r3, #0
 118 0032 FAE7     		b	.L4
 119              	.L11:
 120              		.align	2
 121              	.L10:
 122 0034 00000000 		.word	buffer
 123              		.cfi_endproc
 124              	.LFE946:
 126              		.section	.text.CDC_Init_FS,"ax",%progbits
 127              		.align	1
 128              		.syntax unified
 129              		.thumb
 130              		.thumb_func
 131              		.fpu fpv4-sp-d16
 133              	CDC_Init_FS:
ARM GAS  /tmp/ccswi04o.s 			page 8


 134              	.LFB944:
 156:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 3 */
 135              		.loc 1 156 1 is_stmt 1 view -0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139 0000 10B5     		push	{r4, lr}
 140              	.LCFI0:
 141              		.cfi_def_cfa_offset 8
 142              		.cfi_offset 4, -8
 143              		.cfi_offset 14, -4
 159:Src/usbd_cdc_if.c ****   USBD_CDC_SetRxBuffer(&hUsbDeviceFS, UserRxBufferFS);
 144              		.loc 1 159 3 view .LVU27
 145 0002 064C     		ldr	r4, .L14
 146 0004 0022     		movs	r2, #0
 147 0006 0649     		ldr	r1, .L14+4
 148 0008 2046     		mov	r0, r4
 149 000a FFF7FEFF 		bl	USBD_CDC_SetTxBuffer
 150              	.LVL10:
 160:Src/usbd_cdc_if.c ****   return (USBD_OK);
 151              		.loc 1 160 3 view .LVU28
 152 000e 0549     		ldr	r1, .L14+8
 153 0010 2046     		mov	r0, r4
 154 0012 FFF7FEFF 		bl	USBD_CDC_SetRxBuffer
 155              	.LVL11:
 161:Src/usbd_cdc_if.c ****   /* USER CODE END 3 */
 156              		.loc 1 161 3 view .LVU29
 163:Src/usbd_cdc_if.c **** 
 157              		.loc 1 163 1 is_stmt 0 view .LVU30
 158 0016 0020     		movs	r0, #0
 159 0018 10BD     		pop	{r4, pc}
 160              	.L15:
 161 001a 00BF     		.align	2
 162              	.L14:
 163 001c 00000000 		.word	hUsbDeviceFS
 164 0020 00000000 		.word	UserTxBufferFS
 165 0024 00000000 		.word	UserRxBufferFS
 166              		.cfi_endproc
 167              	.LFE944:
 169              		.section	.text.CDC_Transmit_FS,"ax",%progbits
 170              		.align	1
 171              		.global	CDC_Transmit_FS
 172              		.syntax unified
 173              		.thumb
 174              		.thumb_func
 175              		.fpu fpv4-sp-d16
 177              	CDC_Transmit_FS:
 178              	.LVL12:
 179              	.LFB948:
 254:Src/usbd_cdc_if.c **** 
 255:Src/usbd_cdc_if.c **** /**
 256:Src/usbd_cdc_if.c ****   * @brief  Data received over USB OUT endpoint are sent over CDC interface
 257:Src/usbd_cdc_if.c ****   *         through this function.
 258:Src/usbd_cdc_if.c ****   *
 259:Src/usbd_cdc_if.c ****   *         @note
 260:Src/usbd_cdc_if.c ****   *         This function will block any OUT packet reception on USB endpoint
 261:Src/usbd_cdc_if.c ****   *         untill exiting this function. If you exit this function before transfer
ARM GAS  /tmp/ccswi04o.s 			page 9


 262:Src/usbd_cdc_if.c ****   *         is complete on CDC interface (ie. using DMA controller) it will result
 263:Src/usbd_cdc_if.c ****   *         in receiving more data while previous ones are still not sent.
 264:Src/usbd_cdc_if.c ****   *
 265:Src/usbd_cdc_if.c ****   * @param  Buf: Buffer of data to be received
 266:Src/usbd_cdc_if.c ****   * @param  Len: Number of data received (in bytes)
 267:Src/usbd_cdc_if.c ****   * @retval Result of the operation: USBD_OK if all operations are OK else USBD_FAIL
 268:Src/usbd_cdc_if.c ****   */
 269:Src/usbd_cdc_if.c **** static int8_t CDC_Receive_FS(uint8_t* Buf, uint32_t *Len)
 270:Src/usbd_cdc_if.c **** {
 271:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 6 */
 272:Src/usbd_cdc_if.c ****   USBD_CDC_SetRxBuffer(&hUsbDeviceFS, &Buf[0]);
 273:Src/usbd_cdc_if.c ****   USBD_CDC_ReceivePacket(&hUsbDeviceFS);
 274:Src/usbd_cdc_if.c ****   CDC_Transmit_FS(Buf, *Len);
 275:Src/usbd_cdc_if.c ****   return (USBD_OK);
 276:Src/usbd_cdc_if.c ****   /* USER CODE END 6 */
 277:Src/usbd_cdc_if.c **** }
 278:Src/usbd_cdc_if.c **** 
 279:Src/usbd_cdc_if.c **** /**
 280:Src/usbd_cdc_if.c ****   * @brief  CDC_Transmit_FS
 281:Src/usbd_cdc_if.c ****   *         Data to send over USB IN endpoint are sent over CDC interface
 282:Src/usbd_cdc_if.c ****   *         through this function.
 283:Src/usbd_cdc_if.c ****   *         @note
 284:Src/usbd_cdc_if.c ****   *
 285:Src/usbd_cdc_if.c ****   *
 286:Src/usbd_cdc_if.c ****   * @param  Buf: Buffer of data to be sent
 287:Src/usbd_cdc_if.c ****   * @param  Len: Number of data to be sent (in bytes)
 288:Src/usbd_cdc_if.c ****   * @retval USBD_OK if all operations are OK else USBD_FAIL or USBD_BUSY
 289:Src/usbd_cdc_if.c ****   */
 290:Src/usbd_cdc_if.c **** uint8_t CDC_Transmit_FS(uint8_t* Buf, uint16_t Len)
 291:Src/usbd_cdc_if.c **** {
 180              		.loc 1 291 1 is_stmt 1 view -0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 292:Src/usbd_cdc_if.c ****   uint8_t result = USBD_OK;
 184              		.loc 1 292 3 view .LVU32
 293:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 7 */
 294:Src/usbd_cdc_if.c ****   USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef*)hUsbDeviceFS.pClassData;
 185              		.loc 1 294 3 view .LVU33
 186              		.loc 1 294 27 is_stmt 0 view .LVU34
 187 0000 094B     		ldr	r3, .L24
 188 0002 D3F8B832 		ldr	r3, [r3, #696]
 189              	.LVL13:
 295:Src/usbd_cdc_if.c ****   if (hcdc->TxState != 0){
 190              		.loc 1 295 3 is_stmt 1 view .LVU35
 191              		.loc 1 295 11 is_stmt 0 view .LVU36
 192 0006 D3F81432 		ldr	r3, [r3, #532]
 193              	.LVL14:
 194              		.loc 1 295 6 view .LVU37
 195 000a 0BB1     		cbz	r3, .L23
 296:Src/usbd_cdc_if.c ****     return USBD_BUSY;
 196              		.loc 1 296 12 view .LVU38
 197 000c 0120     		movs	r0, #1
 198              	.LVL15:
 297:Src/usbd_cdc_if.c ****   }
 298:Src/usbd_cdc_if.c ****   USBD_CDC_SetTxBuffer(&hUsbDeviceFS, Buf, Len);
 299:Src/usbd_cdc_if.c ****   result = USBD_CDC_TransmitPacket(&hUsbDeviceFS);
ARM GAS  /tmp/ccswi04o.s 			page 10


 300:Src/usbd_cdc_if.c ****   /* USER CODE END 7 */
 301:Src/usbd_cdc_if.c ****   return result;
 302:Src/usbd_cdc_if.c **** }
 199              		.loc 1 302 1 view .LVU39
 200 000e 7047     		bx	lr
 201              	.LVL16:
 202              	.L23:
 291:Src/usbd_cdc_if.c ****   uint8_t result = USBD_OK;
 203              		.loc 1 291 1 view .LVU40
 204 0010 10B5     		push	{r4, lr}
 205              	.LCFI1:
 206              		.cfi_def_cfa_offset 8
 207              		.cfi_offset 4, -8
 208              		.cfi_offset 14, -4
 298:Src/usbd_cdc_if.c ****   result = USBD_CDC_TransmitPacket(&hUsbDeviceFS);
 209              		.loc 1 298 3 is_stmt 1 view .LVU41
 210 0012 054C     		ldr	r4, .L24
 211              	.LVL17:
 298:Src/usbd_cdc_if.c ****   result = USBD_CDC_TransmitPacket(&hUsbDeviceFS);
 212              		.loc 1 298 3 is_stmt 0 view .LVU42
 213 0014 0A46     		mov	r2, r1
 214 0016 0146     		mov	r1, r0
 215              	.LVL18:
 298:Src/usbd_cdc_if.c ****   result = USBD_CDC_TransmitPacket(&hUsbDeviceFS);
 216              		.loc 1 298 3 view .LVU43
 217 0018 2046     		mov	r0, r4
 218              	.LVL19:
 298:Src/usbd_cdc_if.c ****   result = USBD_CDC_TransmitPacket(&hUsbDeviceFS);
 219              		.loc 1 298 3 view .LVU44
 220 001a FFF7FEFF 		bl	USBD_CDC_SetTxBuffer
 221              	.LVL20:
 299:Src/usbd_cdc_if.c ****   /* USER CODE END 7 */
 222              		.loc 1 299 3 is_stmt 1 view .LVU45
 299:Src/usbd_cdc_if.c ****   /* USER CODE END 7 */
 223              		.loc 1 299 12 is_stmt 0 view .LVU46
 224 001e 2046     		mov	r0, r4
 225 0020 FFF7FEFF 		bl	USBD_CDC_TransmitPacket
 226              	.LVL21:
 301:Src/usbd_cdc_if.c **** }
 227              		.loc 1 301 3 is_stmt 1 view .LVU47
 228              		.loc 1 302 1 is_stmt 0 view .LVU48
 229 0024 10BD     		pop	{r4, pc}
 230              	.L25:
 231 0026 00BF     		.align	2
 232              	.L24:
 233 0028 00000000 		.word	hUsbDeviceFS
 234              		.cfi_endproc
 235              	.LFE948:
 237              		.section	.text.CDC_Receive_FS,"ax",%progbits
 238              		.align	1
 239              		.syntax unified
 240              		.thumb
 241              		.thumb_func
 242              		.fpu fpv4-sp-d16
 244              	CDC_Receive_FS:
 245              	.LVL22:
 246              	.LFB947:
ARM GAS  /tmp/ccswi04o.s 			page 11


 270:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 6 */
 247              		.loc 1 270 1 is_stmt 1 view -0
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 0
 250              		@ frame_needed = 0, uses_anonymous_args = 0
 270:Src/usbd_cdc_if.c ****   /* USER CODE BEGIN 6 */
 251              		.loc 1 270 1 is_stmt 0 view .LVU50
 252 0000 70B5     		push	{r4, r5, r6, lr}
 253              	.LCFI2:
 254              		.cfi_def_cfa_offset 16
 255              		.cfi_offset 4, -16
 256              		.cfi_offset 5, -12
 257              		.cfi_offset 6, -8
 258              		.cfi_offset 14, -4
 259 0002 0446     		mov	r4, r0
 260 0004 0D46     		mov	r5, r1
 272:Src/usbd_cdc_if.c ****   USBD_CDC_ReceivePacket(&hUsbDeviceFS);
 261              		.loc 1 272 3 is_stmt 1 view .LVU51
 262 0006 074E     		ldr	r6, .L28
 263 0008 0146     		mov	r1, r0
 264              	.LVL23:
 272:Src/usbd_cdc_if.c ****   USBD_CDC_ReceivePacket(&hUsbDeviceFS);
 265              		.loc 1 272 3 is_stmt 0 view .LVU52
 266 000a 3046     		mov	r0, r6
 267              	.LVL24:
 272:Src/usbd_cdc_if.c ****   USBD_CDC_ReceivePacket(&hUsbDeviceFS);
 268              		.loc 1 272 3 view .LVU53
 269 000c FFF7FEFF 		bl	USBD_CDC_SetRxBuffer
 270              	.LVL25:
 273:Src/usbd_cdc_if.c ****   CDC_Transmit_FS(Buf, *Len);
 271              		.loc 1 273 3 is_stmt 1 view .LVU54
 272 0010 3046     		mov	r0, r6
 273 0012 FFF7FEFF 		bl	USBD_CDC_ReceivePacket
 274              	.LVL26:
 274:Src/usbd_cdc_if.c ****   return (USBD_OK);
 275              		.loc 1 274 3 view .LVU55
 276 0016 2988     		ldrh	r1, [r5]
 277 0018 2046     		mov	r0, r4
 278 001a FFF7FEFF 		bl	CDC_Transmit_FS
 279              	.LVL27:
 275:Src/usbd_cdc_if.c ****   /* USER CODE END 6 */
 280              		.loc 1 275 3 view .LVU56
 277:Src/usbd_cdc_if.c **** 
 281              		.loc 1 277 1 is_stmt 0 view .LVU57
 282 001e 0020     		movs	r0, #0
 283 0020 70BD     		pop	{r4, r5, r6, pc}
 284              	.LVL28:
 285              	.L29:
 277:Src/usbd_cdc_if.c **** 
 286              		.loc 1 277 1 view .LVU58
 287 0022 00BF     		.align	2
 288              	.L28:
 289 0024 00000000 		.word	hUsbDeviceFS
 290              		.cfi_endproc
 291              	.LFE947:
 293              		.global	USBD_Interface_fops_FS
 294              		.comm	UserTxBufferFS,2048,4
ARM GAS  /tmp/ccswi04o.s 			page 12


 295              		.comm	UserRxBufferFS,2048,4
 296              		.comm	buffer,7,4
 297              		.section	.data.USBD_Interface_fops_FS,"aw"
 298              		.align	2
 301              	USBD_Interface_fops_FS:
 302 0000 00000000 		.word	CDC_Init_FS
 303 0004 00000000 		.word	CDC_DeInit_FS
 304 0008 00000000 		.word	CDC_Control_FS
 305 000c 00000000 		.word	CDC_Receive_FS
 306              		.text
 307              	.Letext0:
 308              		.file 2 "/home/nyanko/gcc/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/machine/_default
 309              		.file 3 "/home/nyanko/gcc/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/lock.h"
 310              		.file 4 "/home/nyanko/gcc/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/_types.h"
 311              		.file 5 "/home/nyanko/gcc/gcc-arm-none-eabi-9-2019-q4-major/lib/gcc/arm-none-eabi/9.2.1/include/st
 312              		.file 6 "/home/nyanko/gcc/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/reent.h"
 313              		.file 7 "/home/nyanko/gcc/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/sys/_stdint.h"
 314              		.file 8 "/home/nyanko/gcc/gcc-arm-none-eabi-9-2019-q4-major/arm-none-eabi/include/stdlib.h"
 315              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 316              		.file 10 "Drivers/CMSIS/Device/ST/STM32WBxx/Include/system_stm32wbxx.h"
 317              		.file 11 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_def.h"
 318              		.file 12 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal_flash.h"
 319              		.file 13 "Drivers/STM32WBxx_HAL_Driver/Inc/stm32wbxx_hal.h"
 320              		.file 14 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 321              		.file 15 "Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc/usbd_cdc.h"
 322              		.file 16 "Inc/usbd_cdc_if.h"
ARM GAS  /tmp/ccswi04o.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbd_cdc_if.c
     /tmp/ccswi04o.s:18     .text.CDC_DeInit_FS:0000000000000000 $t
     /tmp/ccswi04o.s:25     .text.CDC_DeInit_FS:0000000000000000 CDC_DeInit_FS
     /tmp/ccswi04o.s:41     .text.CDC_Control_FS:0000000000000000 $t
     /tmp/ccswi04o.s:47     .text.CDC_Control_FS:0000000000000000 CDC_Control_FS
     /tmp/ccswi04o.s:122    .text.CDC_Control_FS:0000000000000034 $d
                            *COM*:0000000000000007 buffer
     /tmp/ccswi04o.s:127    .text.CDC_Init_FS:0000000000000000 $t
     /tmp/ccswi04o.s:133    .text.CDC_Init_FS:0000000000000000 CDC_Init_FS
     /tmp/ccswi04o.s:163    .text.CDC_Init_FS:000000000000001c $d
                            *COM*:0000000000000800 UserTxBufferFS
                            *COM*:0000000000000800 UserRxBufferFS
     /tmp/ccswi04o.s:170    .text.CDC_Transmit_FS:0000000000000000 $t
     /tmp/ccswi04o.s:177    .text.CDC_Transmit_FS:0000000000000000 CDC_Transmit_FS
     /tmp/ccswi04o.s:233    .text.CDC_Transmit_FS:0000000000000028 $d
     /tmp/ccswi04o.s:238    .text.CDC_Receive_FS:0000000000000000 $t
     /tmp/ccswi04o.s:244    .text.CDC_Receive_FS:0000000000000000 CDC_Receive_FS
     /tmp/ccswi04o.s:289    .text.CDC_Receive_FS:0000000000000024 $d
     /tmp/ccswi04o.s:301    .data.USBD_Interface_fops_FS:0000000000000000 USBD_Interface_fops_FS
     /tmp/ccswi04o.s:298    .data.USBD_Interface_fops_FS:0000000000000000 $d

UNDEFINED SYMBOLS
USBD_CDC_SetTxBuffer
USBD_CDC_SetRxBuffer
hUsbDeviceFS
USBD_CDC_TransmitPacket
USBD_CDC_ReceivePacket
